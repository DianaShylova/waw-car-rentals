{"version":3,"file":"static/js/73.354bc1ca.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactList.module.css?ae34","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"submit_form\":\"ContactForm_submit_form__GvZ4L\",\"name_title\":\"ContactForm_name_title__NFP+F\",\"number_title\":\"ContactForm_number_title__89mM6\",\"shape_input\":\"ContactForm_shape_input__Hjc63\",\"add_contact_btn\":\"ContactForm_add_contact_btn__Du3L2\",\"submit_form_input\":\"ContactForm_submit_form_input__O0Twd\"};","export const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectUser = state => state.auth.user;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\nexport const selectIsFetching = state => state.auth.isFetching;","import css from \"./ContactForm.module.css\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {selectContacts } from \"redux/selectors\";\nimport { addContact } from \"redux/contacts/operations\";\n\nexport const ContactForm = () => {\n   const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n   const [contactName, setcontactName] = useState('');\n  const [number, setNumber] = useState('');\n  \n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n     if (contacts.some(({ name }) => name === contactName)) {\n      window.alert(`${contactName} is already in your contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: contactName,\n        number,        \n      })\n    );\n\n    setcontactName('');\n    setNumber('');\n\n  };\n  \n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'name':\n        setcontactName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n    return (\n      <form className={css.submit_form} onSubmit={handleSubmit}>\n        <h3 className={css.name_title}>Name</h3>\n        <input className={css.shape_input}\n          type=\"text\"\n          name=\"name\"\n          value={contactName}\n          onChange={handleChange}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          \n          required\n        />\n        <h3 className={css.number_title}>Number</h3>\n        <input className={css.shape_input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n           onChange={handleChange}\n          // pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\" className={css.add_contact_btn} >Add contact</button>\n      </form>\n    );\n  \n};","// extracted by mini-css-extract-plugin\nexport default {\"contact_list\":\"ContactList_contact_list__r8jod\",\"contact_list_item\":\"ContactList_contact_list_item__SnCIa\",\"contact_btn\":\"ContactList_contact_btn__pJC3V\"};","import PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContact} from \"redux/contacts/operations\";\nimport { selectContacts, selectStatusFilter } from \"redux/selectors\";\n\nimport css from \"./ContactList.module.css\"\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filtered = useSelector(selectStatusFilter);\n\n  \n\n  const normalizedFilter = filtered.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n\n\n  return (\n    <ul className={css.contact_list}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li className={css.contact_list_item} key={id}>\n          {name}:{number}\n          <button className={css.contact_btn} onClick={() => dispatch(deleteContact(id))} type=\"button\">\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n  };\n\n  ContactsList.protoTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.string),\n  onDeleteContact: PropTypes.func,\n};","// extracted by mini-css-extract-plugin\nexport default {\"filter_shape\":\"Filter_filter_shape__RQr2J\",\"contact_label\":\"Filter_contact_label__EcyzO\"};","import PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectStatusFilter } from 'redux/selectors';\nimport css from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const dispatch = useDispatch()\n  const filter = useSelector(selectStatusFilter);\n\n  const onChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n  return (\n     <label className={css.contact_label}>\n      Find contacts by name\n      <input\n      className={css.filter_shape}      \n      value={filter}      \n        onChange={onChange}\n        type=\"text\"\n        name={filter}\n        placeholder=\"Please input name\"\n      />\n      </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  OnChange: PropTypes.func,\n};","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactsList } from \"components/ContactsList/ContactsList\";\nimport Filter from \"components/Filter/Filter\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectError, selectIsLoading } from \"redux/selectors\";\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'start',\n      }}\n    >\n      <ContactForm />\n      <Filter />\n      <title>Contacts</title>\n      {isLoading && !error && (\n        <b\n          style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginTop: '10px',\n          }}\n        >\n          Loading...\n        </b>\n      )}\n      <ContactsList />\n    </div>\n  );\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["selectContacts","state","contacts","items","selectStatusFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","useSelector","dispatch","useDispatch","useState","contactName","setcontactName","number","setNumber","handleChange","event","target","value","name","className","css","onSubmit","preventDefault","some","window","alert","addContact","type","onChange","title","required","ContactsList","normalizedFilter","toLowerCase","filteredContacts","includes","map","id","onClick","deleteContact","protoTypes","PropTypes","onDeleteContact","Filter","setFilter","placeholder","Contacts","useEffect","fetchContacts","style","display","flexDirection","alignItems","marginLeft","marginRight","marginTop","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}